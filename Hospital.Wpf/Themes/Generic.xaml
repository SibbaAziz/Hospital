<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls1="clr-namespace:Hospital.Wpf.Controls"
                    xmlns:converters="clr-namespace:Hospital.Wpf.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Themes/Pictos.xaml"></ResourceDictionary>
        <ResourceDictionary Source="../Themes/Colors.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <converters:JobToColorConverter x:Key="JobToColorConverter"/>

    <Style TargetType="TextBlock">
        <Setter Property="FontFamily" Value="Arial"></Setter>
    </Style>

    <Style x:Key="ImageButton" TargetType="Button">
        <Setter Property="Foreground" Value="#3c3c3c"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Padding="2" Background="Transparent">
                        <Viewbox>
                            <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#42a5f5"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BackgroudButton" TargetType="Button">
        <Setter Property="Background" Value="#42a5f5"></Setter>
        <Setter Property="Foreground" Value="#3c3c3c"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}" Padding="4">
                        <Viewbox>
                            <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="DarkBlue"></Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
 
    <Style x:Key="AbsentCheckbox" TargetType="CheckBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border>
                        <Button x:Name="ContentControl" IsEnabled="False" Content="{StaticResource AppbarMoonFull}" Style="{StaticResource ImageButton}"  Background="Gray"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ContentControl" Property="Background" Value="Green"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls1:PlaningControl">
       <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid x:Name="Root">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="32"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Service}" FontWeight="Bold" FontSize="14pt" FontStretch="Condensed" Margin="0,5" Grid.ColumnSpan="2"/>
                        <Border Background="{StaticResource Brush1}" Grid.Column="1" Grid.Row="1">
                            <Grid x:Name="Headers"></Grid>
                        </Border>
                        <Border Background="{StaticResource Brush2}" Grid.Row="2">
                            <Grid x:Name="Timeline"></Grid>
                        </Border>
                        <Border Grid.Column="1" Grid.Row="2" >
                            <Grid x:Name="Content" ></Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
       </Setter>
    </Style>


    <Style x:Key="ListViewStyle" TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#42a5f5"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Gray"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="#42a5f5"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="Gray"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="controls1:ListEditorControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls1:ListEditorControl">
                    <Grid x:Name="Root">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" ></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Border Background="LightGray"></Border>
                        <StackPanel x:Name="Controls" Height="25" Visibility="Collapsed" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button Content="{StaticResource AppbarUserAdd}" HorizontalAlignment="Right" Style="{StaticResource ImageButton}" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AddCommand}" ToolTip="Ajouter une ressource"  Width="25" />
                            <Button Content="{StaticResource AppbarGroupDelete}" ToolTip="Supprimer tout" HorizontalAlignment="Right" Style="{StaticResource ImageButton}" Command="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=RemoveAllCommand}"  Width="25" />
                        </StackPanel>
                        <ListView Background="Transparent" BorderThickness="0" Grid.Row="1" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ObservableResources}"  ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                            <ListView.Resources>
                                <Style TargetType="ListViewItem">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Setter Property="VerticalContentAlignment" Value="Stretch"></Setter>
                                    <Setter Property="Margin" Value="2"/>
                                    <Setter Property="BorderBrush" Value="Gray"/>
                                    <Setter Property="BorderThickness" Value="1"></Setter>
                                    <Setter Property="Padding" Value="0"></Setter>
                                    <Setter Property="Height" Value="85"/>
                                    <Setter Property="Width" Value="140"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="Bd" Value="#42a5f5"/>
                                                        <Setter Property="BorderBrush" TargetName="Bd" Value="Gray"/>
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                            <Condition Property="IsSelected" Value="True"/>
                                                        </MultiTrigger.Conditions>
                                                        <Setter Property="Background" TargetName="Bd" Value="#42a5f5"/>
                                                        <Setter Property="BorderBrush" TargetName="Bd" Value="Gray"/>
                                                    </MultiTrigger>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Border Padding="2" ToolTip="{Binding Comment}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="10"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="1*"/>
                                                <RowDefinition Height="1*"/>
                                                <RowDefinition Height="1*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Color" Background="{Binding Job, Converter={StaticResource JobToColorConverter} }" Grid.RowSpan="3" Margin="-2,-2,4,-2" />
                                            <TextBlock x:Name="Name" Grid.Row="1" Grid.Column="1" Text="{Binding Name}"/>
                                            <Grid Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock x:Name="Job" FontWeight="Bold" TextTrimming="CharacterEllipsis" ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Text="{Binding Job}"/>

                                                <CheckBox x:Name="Present" Grid.Column="1" IsChecked="{Binding IsPresent}" Style="{StaticResource AbsentCheckbox}" Height="15" Width="15" HorizontalAlignment="Right" VerticalAlignment="Top" Command="{Binding ChangeAbsenceCommand, RelativeSource={RelativeSource AncestorType=controls1:ListEditorControl}}" CommandParameter="{Binding}"/>
                                            </Grid>
                                            
                                                <ComboBox  Grid.ColumnSpan="2" Margin="2" x:Name="Resources" Grid.RowSpan="3" VerticalAlignment="Center" ItemsSource="{Binding RelativeSource={RelativeSource AncestorType=controls1:ListEditorControl}, Path=ResourceItems}">
                                                    <ComboBox.ItemContainerStyle>
                                                        <Style TargetType="ComboBoxItem">
                                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                        </Style>
                                                    </ComboBox.ItemContainerStyle>
                                                    <ComboBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid HorizontalAlignment="Stretch">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap">
                                                                <Run Text=" - "/>
                                                                <Run Text="{Binding Job}"/></TextBlock>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ComboBox.ItemTemplate>
                                            </ComboBox>
                                            <TextBlock x:Name="PhoneNumber" Grid.Column="1" VerticalAlignment="Bottom" Text="{Binding PhoneNumber}" Grid.Row="2"/>
                                            <StackPanel Grid.Column="1"  Grid.Row="2" HorizontalAlignment="Right" Orientation="Horizontal" VerticalAlignment="Bottom">
                                                <Button x:Name="Delete"   Content="{StaticResource AppbarUserDelete}" Visibility="Collapsed" Width="20" Height="20" Style="{StaticResource ImageButton}"  Command="{Binding RelativeSource={RelativeSource AncestorType=controls1:ListEditorControl}, Path=RemoveCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"/>
                                                <Button x:Name="Validate" Content="{StaticResource AppbarCheck}" Width="20" Height="20" Style="{StaticResource ImageButton}"  Command="{Binding RelativeSource={RelativeSource AncestorType=controls1:ListEditorControl}, Path=ValidateCommand}" CommandParameter="{Binding ElementName=Resources, Path=SelectedItem}"/>
                                                <Button x:Name="Edit" Content="{StaticResource AppbarClipboardEdit}" Width="20" Height="20" Style="{StaticResource ImageButton}"  Command="{Binding RelativeSource={RelativeSource AncestorType=controls1:ListEditorControl}, Path=EditCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=DataContext}"/>
                                            </StackPanel>

                                        </Grid>
                                    </Border>
                                    
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsEditMode}" Value="True">
                                            <Setter TargetName="Delete" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="Validate" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Resources" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Edit" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="Job" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="Name" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="PhoneNumber" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="Present" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="Color" Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEditMode}" Value="False">
                                            <Setter TargetName="Validate" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="Delete" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Resources" Property="Visibility" Value="Collapsed"/>
                                            <Setter TargetName="Edit" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Job" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Name" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="PhoneNumber" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Present" Property="Visibility" Value="Visible"/>
                                            <Setter TargetName="Color" Property="Visibility" Value="Visible"/>
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Controls" Property="Visibility" Value="Visible"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>